{"version":3,"file":"static/webpack/static/development/pages/callback.js.b0f4413286d4d02413b7.hot-update.js","sources":["webpack:///./services/auth0.js"],"sourcesContent":["import auth0 from 'auth0-js';\nimport Cookies from 'js-cookie';\nclass Auth0 {\n  \n  constructor() {\n    this.auth0 = new auth0.WebAuth({\n        domain: 'dev-iy0gmg-9.auth0.com',\n        clientID: '1sMRLEXYTU40Cz9gAKAL5fpzlcszD0cA',\n        redirectUri: 'http://localhost:3000/callback',\n        responseType: 'token id_token',\n        scope: 'openid profile'\n      });\n      this.login = this.login.bind(this); \n      this.logout = this.logout.bind(this);\n      this.handleAuthentication = this.handleAuthentication.bind(this);\n      this.isAuthenticated = this.isAuthenticated.bind(this);\n\n  }\n  handleAuthentication() {\n      return new Promise( (resolve, reject) => {\n        this.auth0.parseHash((err, authResult) => {\n            if (authResult && authResult.accessToken && authResult.idToken) {\n              this.setSession(authResult);\n                resolve();\n            } else if (err) {\n              reject();\n              console.log(err);\n            }\n          });\n      })\n \n  }\n\n  setSession(authResult) {\n    \n    // Set the time that the Access Token will expire at\n    let expiresAt = (authResult.expiresIn * 1000) + new Date().getTime();\n    Cookies.set('user', authResult.idTokenPayload);\n    Cookies.set('jwt', authResult.idToken);\n    Cookies.set('expiresAt', expiresAt);\n    // navigate to the home route\n  }\n  logout() {\n    Cookies.remove('user');\n    Cookies.remove('jwt');\n    Cookies.remove('expiresAt');\n\n    this.auth0.logout({\n      returnTo: '',\n      clientID: '1sMRLEXYTU40Cz9gAKAL5fpzlcszD0cA'\n    })\n  }\n  \n\n  login() {\n    this.auth0.authorize();\n  }\n  isAuthenticated() {\n    // Check whether the current time is past the\n    // access token's expiry time\n    let expiresAt = Cookie.getJSON('expiresAt');\n    return new Date().getTime() < expiresAt;\n  }\n}\n\n\nconst auth0Client = new Auth0();\n\nexport default auth0Client;"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAAA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAEA;AACA;;;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;;;AAGA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAIA;AAEA;;;;A","sourceRoot":""}